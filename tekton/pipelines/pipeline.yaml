apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: hello-pipeline
spec:
  workspaces:
  - name: playbooks
    description: |
      This workspace will contain ansible playbooks
  - name: inventories
    description: |
      This workspace will contain ansible inventories
  tasks:
    - name: pipeline-hello-task
      taskRef:
        name: hello-task
    - name: get-inventories
      taskRef:
        name: git-clone
      workspaces:
      - name: output
        workspace: inventories
      params:
#TODO: Replace url and revision with params
      - name: url
        value: https://github.com/tylerauerbeck/devconf21-infracicd
      - name: revision
        value: "main"
      - name: deleteExisting
        value: "true"
    - name: get-playbooks
      taskRef:
        name: git-clone
      workspaces:
      - name: output
        workspace: playbooks
      params:
#TODO: Replace url and revision with params
      - name: url
        value: https://github.com/redhat-cop/infra-ansible
      - name: revision
        value: "v2.0.4"
      - name: deleteExisting
        value: "true"
    - name: lint-dns
      workspaces:
      - name: output
        workspace: playbooks
      taskRef:
        name: ansible-lint
      params:
        - name: SKIP_LIST
          value: "106,206,208,301,303,305"
        - name: ARGS
          value: ["$(workspaces.output.path)/roles/dns/config-dns-server-bind/"]
      runAfter:
        - get-inventories
        - get-playbooks
    - name: create-vm
      taskRef:
        name: create-vm-from-manifest
      params:
        - name: manifest
          value: |
            apiVersion: kubevirt.io/v1alpha3
            kind: VirtualMachineInstance
            metadata:
              labels:
                flavor: vmi-fedora-1
              name: vmi-fedora-1
            spec:
              readinessProbe:
                tcpSocket:
                  port: 22
                initialDelaySeconds: 120
                periodSeconds: 30
                timeoutSeconds: 10
                failureThreshold: 10
                successThreshold: 1 
              networks:
              - name: default
                pod: {}
              domain:
                devices:
                  interfaces:
                    - name: default
                      masquerade: {}
                  disks:
                  - disk:
                      bus: virtio
                    name: containerdisk
                  - disk:
                      bus: virtio
                    name: cloudinitdisk
                  rng: {}
                machine:
                  type: ""
                resources:
                  requests:
                    memory: 4Gi
                    cpu: "2"
              terminationGracePeriodSeconds: 0
              volumes:
              - containerDisk:
                  image: kubevirt/fedora-cloud-container-disk-demo:v0.32.0
                name: containerdisk
              - cloudInitNoCloud:
                  userData: |
                    #cloud-config
                    hostname: fedora-0
                    password: fedora
                    chpasswd: { expire: False }
                    ssh_pwauth: True
                    disable_root: false
                    ssh_authorized_keys:
                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDsYL8SnJf3blzXmsqJrdyz8RF88W+k9tv/5muoL9ieUGpI67cCKbzCInfKRiuMaDd51D8f+ezZzwx6x/sSbhaDIA90cPBCJIVXY3sVLTSIYK+EzfzDdgYBdpphsRCapwK++5Yev68NT/02BJRbqXhNrYcE4bj2GEQX6Tq8n3LqOYg3j5TvmCBvxut7qztn16rNHFBFF2K/AEavzkyFrzaddFAdVzmV79zBAhCYwoRWhXffMr0NxihxdbglT7qNRtJbOlvBgbYinn2rSsXrSF+1TdCHk3Uo+H5q2sfSDtMQCN32Oh+bCG/zxwL8p2hbdC6AKIk3LzICTqFa+gRCvOWR 
                name: cloudinitdisk
#    - name: wait-for-vm
#      taskRef:
#        name: wait-for-vmi-status
#      params:
#        - name: vmiName
#          value: vmi-fedora-1
#        - name: successCondition
#          value: "status.phase == Succeeded"
